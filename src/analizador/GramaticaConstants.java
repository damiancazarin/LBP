/* Generated By:JavaCC: Do not edit this line. GramaticaConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GramaticaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASIGNACION = 1;
  /** RegularExpression Id. */
  int MAS = 2;
  /** RegularExpression Id. */
  int MENOS = 3;
  /** RegularExpression Id. */
  int MULTIPLICAR = 4;
  /** RegularExpression Id. */
  int DIVIDIR = 5;
  /** RegularExpression Id. */
  int INCR = 6;
  /** RegularExpression Id. */
  int DECR = 7;
  /** RegularExpression Id. */
  int MODULO = 8;
  /** RegularExpression Id. */
  int SUMAIGUAL = 9;
  /** RegularExpression Id. */
  int RESTAIGUAL = 10;
  /** RegularExpression Id. */
  int MULTIGUAL = 11;
  /** RegularExpression Id. */
  int DIVIDIRIGUAL = 12;
  /** RegularExpression Id. */
  int MODULOIGUAL = 13;
  /** RegularExpression Id. */
  int VOID = 14;
  /** RegularExpression Id. */
  int MAIN = 15;
  /** RegularExpression Id. */
  int WRITE = 16;
  /** RegularExpression Id. */
  int READ = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int ELSEIF = 20;
  /** RegularExpression Id. */
  int RETURN = 21;
  /** RegularExpression Id. */
  int BREAK = 22;
  /** RegularExpression Id. */
  int FOR = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int PARI = 25;
  /** RegularExpression Id. */
  int PARD = 26;
  /** RegularExpression Id. */
  int LLAVEI = 27;
  /** RegularExpression Id. */
  int LLAVED = 28;
  /** RegularExpression Id. */
  int DELIMITER = 29;
  /** RegularExpression Id. */
  int COMA = 30;
  /** RegularExpression Id. */
  int COMILLA = 31;
  /** RegularExpression Id. */
  int COMENTARIO = 32;
  /** RegularExpression Id. */
  int PUNTO = 33;
  /** RegularExpression Id. */
  int IGUALDAD = 34;
  /** RegularExpression Id. */
  int MAYOR = 35;
  /** RegularExpression Id. */
  int MAYORI = 36;
  /** RegularExpression Id. */
  int MENOR = 37;
  /** RegularExpression Id. */
  int MENORI = 38;
  /** RegularExpression Id. */
  int DIFERENCIA = 39;
  /** RegularExpression Id. */
  int NEGACION = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int OR = 42;
  /** RegularExpression Id. */
  int TRUE = 43;
  /** RegularExpression Id. */
  int FALSE = 44;
  /** RegularExpression Id. */
  int NULL = 45;
  /** RegularExpression Id. */
  int INT = 46;
  /** RegularExpression Id. */
  int FLOAT = 47;
  /** RegularExpression Id. */
  int STRING = 48;
  /** RegularExpression Id. */
  int BOOL = 49;
  /** RegularExpression Id. */
  int CARACTER = 50;
  /** RegularExpression Id. */
  int NUMERO = 51;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 52;
  /** RegularExpression Id. */
  int DECIMAL = 53;
  /** RegularExpression Id. */
  int CADENA = 54;
  /** RegularExpression Id. */
  int CHAR = 55;
  /** RegularExpression Id. */
  int DOSPUNTOS = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"%\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"vacio\"",
    "\"principal\"",
    "\"imprimir\"",
    "\"leer\"",
    "\"cuando\"",
    "\"sino\"",
    "\"sino_cuando\"",
    "\"retorno\"",
    "\"romper\"",
    "\"ciclo_for\"",
    "\"ciclo_mientras\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\"\\\"\"",
    "\"#\"",
    "\".\"",
    "\"==\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"!=\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"verdadero\"",
    "\"falso\"",
    "\"nulo\"",
    "\"entero\"",
    "\"flotante\"",
    "\"cadena\"",
    "\"bool\"",
    "\"caracter\"",
    "<NUMERO>",
    "<IDENTIFICADOR>",
    "<DECIMAL>",
    "<CADENA>",
    "<CHAR>",
    "\":\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
  };

}
